#!/usr/bin/env bash

set -euo pipefail

gh auth status >/dev/null
type jq >/dev/null

domain="$1"
ssh -n "$domain" info >/dev/null

(
  gh api /user/repos --paginate \
    --jq='.[] | { name: .full_name, project: .full_name, description: .description, url: .clone_url, privateUrl: .ssh_url, private: .private, fork: .fork }'
  gh api /gists --paginate \
    --jq='.[] | { name: .id, project: .files | keys[0], description: .description, url: .git_pull_url, privateUrl: .git_pull_url, private: .public | not, fork: false }'
) | while read -r repo; do
  name="$(jq '.name' <<<"$repo")"
  project="$(jq '.project' <<<"$repo")"
  description="$(jq '.description' <<<"$repo")"
  private="$(jq '.private' <<<"$repo")"
  fork="$(jq '.fork' <<<"$repo")"

  if ("$private"); then
    url="$(jq '.privateUrl' <<<"$repo")"
  else
    url="$(jq '.url' <<<"$repo")"
  fi

  if ("$fork" || ssh -n "$domain" repo branch list "$name" &>/dev/null); then
    echo "Skipped $name"
    continue
  fi

  echo "Importing $name..."
  if [[ "$description" == 'null' ]]; then
    ssh -fn "$domain" repo import "$name" "$url" -n="$project" -mp="$private"
  else
    ssh -fn "$domain" repo import "$name" "$url" -n="$project" -d="$description" -mp="$private"
  fi
done
