name: immich

services:
  server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.111.0@sha256:267e65c8c639495497ec8ba9b35c02a6b6947c23e89fcbc199ee09a136b558a3
    environment:
      UPLOAD_LOCATION: ./library
      IMMICH_CONFIG_FILE: /config/immich.json
      DB_HOSTNAME: $DB_HOSTNAME
      DB_DATABASE_NAME: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
    volumes:
      - ./library:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    configs:
      - source: immich_config
        target: /config/immich.json
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.111.0@sha256:e9a7b0867331a44b3bfa9be1b198c58fc7c29bee9de1fce51e5692061acef135
    volumes:
      - model-cache:/cache
    restart: always

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg16-v0.2.1@sha256:ff2288833f32aa863ba46f4c6f5b5c143f526a2d27f4cca913c232f917a66602
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='$DB_DATABASE_NAME' --username='$DB_USERNAME' || exit 1
    restart: always

  redis:
    container_name: immich_redis
    image: redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup:
    container_name: immich_backup
    image: prodrigestivill/postgres-backup-local:16@sha256:f873bbfb406db633ab879628b11ef8092279639c467a2ea5f5bfa08b776252fb
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_CLUSTER: TRUE
      POSTGRES_EXTRA_OPTS: --clean --if-exists
      TZ: JST
      SCHEDULE: 0 5 * * *
    volumes:
      - ./backups:/backups
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: immich_cloudflare_tunnel
    image: cloudflare/cloudflared:2024.8.2@sha256:004f4b7b60bab652d478148c138843c24eae1feee4c58fddd435b9b79c953957
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  model-cache:
  database:
configs:
  immich_config:
    file: ./config/immich.json
