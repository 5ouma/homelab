name: immich

services:
  server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v2.2.1@sha256:2c951a4063b55ec2de197fdf6a85e32b05872d3a18a18eaf851b827ff2622814
    environment:
      IMMICH_CONFIG_FILE: &immich_config /config/immich.json
      DB_HOSTNAME: $DB_HOSTNAME
      DB_DATABASE_NAME: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
    volumes:
      - type: bind
        source: ./data
        target: &data /data
    configs:
      - source: timezone
        target: /etc/localtime
      - source: immich_config
        target: *immich_config
    post_start:
      - command: bash -c '
          mkdir -p upload library thumbs encoded-video profile backups &&
          touch {upload,library,thumbs,encoded-video,profile,backups}/.immich'
        working_dir: *data
    ports:
      - 2283:2283
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  machine-learning:
    container_name: immich_machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v2.2.1@sha256:590a76bba3d88ccf78b03cde0c0fb8788f7d76ae6caf90ad33a34b5b4cc35f11
    volumes:
      - model-cache:/cache
    restart: unless-stopped

  database:
    container_name: &immich_database immich_database
    image: ghcr.io/immich-app/postgres:17-vectorchord0.4.3-pgvectors0.3.0@sha256:6b725ce331a1db016c75ca13e4cfc35435718f3fe975ff75a9c11debebbe21d7
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - database-backup:/tmp/backup
    labels:
      docker-volume-backup.exec-label: *immich_database
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/immich.sql
    restart: unless-stopped

  redis:
    container_name: immich_redis
    image: docker.io/redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
      interval: 5s
    restart: unless-stopped

  backup:
    container_name: immich_backup
    image: docker.io/offen/docker-volume-backup:v2.45.0@sha256:b9a023e1a309556917baa72116011a1898448dfa5e5b0941332eda23f2c2b8f6
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      R2_PATH: $R2_PATH
      BACKUP_RETENTION_DAYS: 14
      GPG_PASSPHRASE: $DB_PASSWORD
    env_file:
      - path: ../.env
        required: true
    volumes:
      - database-backup:/backup/database:ro
      - $BACKUP_DIR/database:/archive/database
      - ./data/library:/backup/data/library:ro
      - ./data/profile:/backup/data/profile:ro
      - $BACKUP_DIR/data:/archive/data
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
      - source: backup_config
        target: /etc/dockervolumebackup/conf.d
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  cloudflare-tunnel:
    container_name: immich_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.10.1@sha256:21f3607baf2384c54d592b0efe76dd5f548c0dbc083e62fa22c7fac3923d077f
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: unless-stopped

volumes:
  model-cache:
  database:
  database-backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  immich_config:
    file: ./config/immich.json
  backup_config:
    file: ./config/backup
