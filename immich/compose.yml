name: immich

services:
  server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.135.3@sha256:df5bbf4e29eff4688063a005708f8b96f13073200b4a7378f7661568459b31e9
    environment:
      IMMICH_CONFIG_FILE: &immich_config /config/immich.json
      DB_HOSTNAME: $DB_HOSTNAME
      DB_DATABASE_NAME: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
    volumes:
      - type: bind
        source: ./library
        target: &library /usr/src/app/upload
    configs:
      - source: timezone
        target: /etc/localtime
      - source: immich_config
        target: *immich_config
    post_start:
      - command: bash -c '
          mkdir -p upload thumbs encoded-video backups &&
          touch {upload,thumbs,encoded-video,backups}/.immich'
        working_dir: *library
    ports:
      - 2283:2283
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  machine-learning:
    container_name: immich_machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.135.3@sha256:9f2f61d86af82d04926f9b896c995c502303052905517c5485dd26bf1e42a44e
    volumes:
      - model-cache:/cache
    restart: always

  database:
    container_name: &immich_database immich_database
    image: ghcr.io/immich-app/postgres:16-vectorchord0.4.3-pgvectors0.3.0@sha256:70c4d9ae3d1921dac8ee89a631ceaf26c8979451250271415a2f9c3493d07638
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - backup:/tmp/backup
    labels:
      docker-volume-backup.exec-label: *immich_database
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/immich.sql
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup-database: &backup
    container_name: immich_backup-database
    image: docker.io/offen/docker-volume-backup:v2.43.4@sha256:bdb9b5dffee440a7d21b1b210cd704fd1696a2c29d7cbc6f0f3b13b77264a26a
    environment: &backup_environment
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: immich_%Y%m%d.{{ .Extension }}
      AWS_S3_PATH: $R2_PATH
      BACKUP_ARCHIVE: &backup_database_archive /archive/database
      BACKUP_RETENTION_DAYS: 14
      GPG_PASSPHRASE: $DB_PASSWORD
      EXEC_LABEL: *immich_database
    env_file:
      - path: ../.env
        required: true
    volumes:
      - backup:/backup:ro
      - type: bind
        source: $BACKUP_DIR/database
        target: *backup_database_archive
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  backup-library:
    <<: *backup
    container_name: immich_backup-library
    environment:
      <<: *backup_environment
      WEBDAV_URL: $WEBDAV_URL
      WEBDAV_PATH: $WEBDAV_PATH
      WEBDAV_USERNAME: $WEBDAV_USERNAME
      WEBDAV_PASSWORD: $WEBDAV_PASSWORD
      BACKUP_SOURCES: /library
      BACKUP_ARCHIVE: &backup_library_archive /archive/library
      EXEC_LABEL: none
    env_file: []
    volumes:
      - ./library/library:/library/library:ro
      - ./library/profile:/library/profile:ro
      - type: bind
        source: $BACKUP_DIR/library
        target: *backup_library_archive
    depends_on: []

  cloudflare-tunnel:
    container_name: immich_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.6.1@sha256:175aee7e8b548f983f7e3b79ace217676d2a79255a73c074dacb491e59603679
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  model-cache:
  database:
  backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  immich_config:
    file: ./config/immich.json
