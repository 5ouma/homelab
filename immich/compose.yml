name: immich

services:
  server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.135.1@sha256:346ff2c420e9fe71140392a2270bf5a7d29e50fd9615d1981de4a8e564f3c0a2
    environment:
      UPLOAD_LOCATION: ./library
      IMMICH_CONFIG_FILE: /config/immich.json
      DB_HOSTNAME: $DB_HOSTNAME
      DB_DATABASE_NAME: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
    volumes:
      - ./library:/usr/src/app/upload
    configs:
      - source: timezone
        target: /etc/localtime
      - source: immich_config
        target: /config/immich.json
    ports:
      - 2283:2283
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  machine-learning:
    container_name: immich_machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.135.1@sha256:8970f5c904ed6acae0926992670101a17ee67bd8d71f631d8423bb382a3d1d10
    volumes:
      - model-cache:/cache
    restart: always

  database:
    container_name: immich_database
    image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.3.0@sha256:0678525bd24d0cd5114953dec62f0690285688d8c87cc98d657817e80870fb26
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - backup:/tmp/backup
    labels:
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/immich.sql
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup-database: &backup
    container_name: immich_backup-database
    image: docker.io/offen/docker-volume-backup:v2.43.4@sha256:bdb9b5dffee440a7d21b1b210cd704fd1696a2c29d7cbc6f0f3b13b77264a26a
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: immich_database_%Y%m%d.{{ .Extension }}
      BACKUP_SKIP_BACKENDS_FROM_PRUNE: s3
      AWS_S3_BUCKET_NAME: $R2_BUCKET_NAME
      AWS_S3_PATH: $R2_PATH
      BACKUP_ARCHIVE: /archive/database
      BACKUP_RETENTION_DAYS: 7
      GPG_PASSPHRASE: $DB_PASSWORD
    env_file:
      - path: ../.env
        required: true
    volumes:
      - backup:/backup:ro
      - $BACKUP_DIR/database:/archive/database
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  backup-library:
    <<: *backup
    container_name: immich_backup-library
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: immich_library_%Y%m%d.{{ .Extension }}
      BACKUP_SOURCES: /library
      BACKUP_ARCHIVE: /archive/library
      BACKUP_RETENTION_DAYS: 5
      GPG_PASSPHRASE: $DB_PASSWORD
    volumes:
      - ./library:/library:ro
      - $BACKUP_DIR/library:/archive/library

  cloudflare-tunnel:
    container_name: immich_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.6.1@sha256:175aee7e8b548f983f7e3b79ace217676d2a79255a73c074dacb491e59603679
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  model-cache:
  database:
  backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  immich_config:
    file: ./config/immich.json
