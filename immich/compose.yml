name: immich

services:
  server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.143.1@sha256:a5935f03b93137952c38b14a47148525023f4c36a2db174d8266a9d3b37e7e3b
    environment:
      IMMICH_CONFIG_FILE: &immich_config /config/immich.json
      DB_HOSTNAME: $DB_HOSTNAME
      DB_DATABASE_NAME: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
    volumes:
      - type: bind
        source: ./data
        target: &data /data
    configs:
      - source: timezone
        target: /etc/localtime
      - source: immich_config
        target: *immich_config
    post_start:
      - command: bash -c '
          mkdir -p upload library thumbs encoded-video profile backups &&
          touch {upload,library,thumbs,encoded-video,profile,backups}/.immich'
        working_dir: *data
    ports:
      - 2283:2283
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  machine-learning:
    container_name: immich_machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.143.1@sha256:cc94659771d7e394d6406ebb0664069f2523062fda4f934def31648e903c4de2
    volumes:
      - model-cache:/cache
    restart: unless-stopped

  database:
    container_name: &immich_database immich_database
    image: ghcr.io/immich-app/postgres:16-vectorchord0.4.3-pgvectors0.3.0@sha256:ccfc11981f663018d125ee055b378134cf3dd20b02d391178d5bcefa0fa049c2
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - database-backup:/tmp/backup
    labels:
      docker-volume-backup.exec-label: *immich_database
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/immich.sql
    restart: unless-stopped

  redis:
    container_name: immich_redis
    image: docker.io/redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
      interval: 5s
    restart: unless-stopped

  backup:
    container_name: immich_backup
    image: docker.io/offen/docker-volume-backup:v2.44.0@sha256:fcf92e0f192214ccda0a89f989bed6c49d4ed77da4e59b38ddfcf05a05512337
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      R2_PATH: $R2_PATH
      BACKUP_RETENTION_DAYS: 14
      GPG_PASSPHRASE: $DB_PASSWORD
    env_file:
      - path: ../.env
        required: true
    volumes:
      - database-backup:/backup/database:ro
      - $BACKUP_DIR/database:/archive/database
      - ./data/library:/backup/data/library:ro
      - ./data/profile:/backup/data/profile:ro
      - $BACKUP_DIR/data:/archive/data
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
      - source: backup_config
        target: /etc/dockervolumebackup/conf.d
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  cloudflare-tunnel:
    container_name: immich_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.9.0@sha256:f9af3635e01536d28ca54186d3b945ed6ae494246e9b7045dedfa5a3747d4ccc
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: unless-stopped

volumes:
  model-cache:
  database:
  database-backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  immich_config:
    file: ./config/immich.json
  backup_config:
    file: ./config/backup
