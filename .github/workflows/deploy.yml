name: üöÄ Deploy

on:
  push:
    branches:
      - main
    paths:
      - "**/compose.yml"
      - .github/workflows/deploy.yml

permissions: {}

jobs:
  detect:
    name: üîç Detect Changed Compose Files
    runs-on: Ubuntu-Latest
    timeout-minutes: 1
    outputs:
      compose_files: ${{ steps.detect.outputs.compose_files }}

    steps:
      - name: üöö Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: üîç Detect changed compose files
        id: detect
        uses: ./.github/actions/detect-changed-compose
        with:
          workflow_file: .github/workflows/deploy.yml

  fetch:
    name: üîÑ Fetch Repository
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: üõ£Ô∏è Setup Tailscale
        uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3.2.3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
          tags: "tag:actions"

      - name: üîê SSH to fetch
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            git -C "$GIT_PATH" fetch
            git -C "$GIT_PATH" reset -q --hard origin/main
          envs: GIT_PATH
        env:
          GIT_PATH: ${{ secrets.GIT_PATH }}

  deploy:
    name: ${{ matrix.compose.name }}
    needs: [detect, fetch]
    runs-on: Ubuntu-Latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        compose: ${{ fromJson(needs.detect.outputs.compose_files) }}

    steps:
      - name: üõ£Ô∏è Setup Tailscale
        uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3.2.3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
          tags: "tag:actions"

      - name: üîê SSH to deploy
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: docker compose -f "$COMPOSE_DIR/compose.yml" up -d --quiet-pull
          envs: COMPOSE_DIR
        env:
          COMPOSE_DIR: ${{ secrets.GIT_PATH }}/${{ matrix.compose.dir }}

  cleanup:
    name: üßπ Cleanup Docker Images and Volumes
    needs: deploy
    runs-on: Ubuntu-Latest
    timeout-minutes: 1

    steps:
      - name: üõ£Ô∏è Setup Tailscale
        uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3.2.3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
          tags: "tag:actions"

      - name: üîê SSH to cleanup
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker image prune -af
            docker volume prune -af
