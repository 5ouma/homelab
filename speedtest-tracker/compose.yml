name: speedtest-tracker

services:
  speedtest-tracker:
    container_name: speedtest-tracker
    image: linuxserver/speedtest-tracker:0.20.9@sha256:95919033c7e5e6a7339eeca18912d1c7b1e6724c5ae2e852ad0abd03e23fab34
    environment:
      APP_KEY: $APP_KEY
      DB_CONNECTION: pgsql
      DB_HOST: $DB_HOSTNAME
      DB_DATABASE: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
      SPEEDTEST_SCHEDULE: 0 * * * *
      SPEEDTEST_SERVERS: $SPEEDTEST_SERVERS
      DISPLAY_TIMEZONE: JST
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: curl -f http://speedtest-tracker/api/healthcheck | jq -r .message || exit 1
    restart: always

  database:
    container_name: speedtest-tracker_database
    image: postgres:16.3@sha256:d0f363f8366fbc3f52d172c6e76bc27151c3d643b870e1062b4e8bfe65baf609
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
    restart: always

  backup:
    container_name: speedtest-tracker_backup
    image: prodrigestivill/postgres-backup-local:16@sha256:f873bbfb406db633ab879628b11ef8092279639c467a2ea5f5bfa08b776252fb
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_CLUSTER: TRUE
      POSTGRES_EXTRA_OPTS: --clean --if-exists
      TZ: JST
      SCHEDULE: 0 5 * * *
    volumes:
      - ./backups:/backups
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: speedtest-tracker_cloudflare_tunnel
    image: cloudflare/cloudflared:2024.8.2@sha256:004f4b7b60bab652d478148c138843c24eae1feee4c58fddd435b9b79c953957
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:
