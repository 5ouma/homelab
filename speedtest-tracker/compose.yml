name: speedtest-tracker

services:
  speedtest-tracker:
    container_name: speedtest-tracker
    image: docker.io/linuxserver/speedtest-tracker:1.6.6@sha256:f63b6f58da10ce6d33312e09a1550888165d48cdb38bf916eb00b4e88ae93b58
    environment:
      APP_KEY: $APP_KEY
      DB_CONNECTION: pgsql
      DB_HOST: $DB_HOSTNAME
      DB_DATABASE: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
      SPEEDTEST_SCHEDULE: 0 * * * *
      DISPLAY_TIMEZONE: JST
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost/api/healthcheck | jq -r .message || exit 1
      interval: 5s
    restart: always

  database:
    container_name: &speedtest-tracker_database speedtest-tracker_database
    image: docker.io/postgres:16.10@sha256:b477759d38be47671d54a054d832791f8ddb9f0eaf6faf51ed17516087793a66
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - database-backup:/tmp/backup
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
      interval: 5s
    labels:
      docker-volume-backup.exec-label: *speedtest-tracker_database
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/speedtest-tracker.sql
    restart: always

  backup:
    container_name: speedtest-tracker_backup
    image: docker.io/offen/docker-volume-backup:v2.44.0@sha256:fcf92e0f192214ccda0a89f989bed6c49d4ed77da4e59b38ddfcf05a05512337
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: speedtest-tracker_database_%Y%m%d.{{ .Extension }}
      AWS_S3_PATH: $R2_PATH/database
      BACKUP_SOURCES: &backup_database_source /backup/database
      BACKUP_ARCHIVE: &backup_database_archive /archive/database
      BACKUP_RETENTION_DAYS: 14
      GPG_PASSPHRASE: $DB_PASSWORD
      EXEC_LABEL: *speedtest-tracker_database
    env_file:
      - path: ../.env
        required: true
    volumes:
      - type: volume
        source: database-backup
        target: *backup_database_source
        read_only: true
      - type: bind
        source: $BACKUP_DIR/database
        target: *backup_database_archive
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: speedtest-tracker_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.9.0@sha256:f9af3635e01536d28ca54186d3b945ed6ae494246e9b7045dedfa5a3747d4ccc
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:
  database-backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
