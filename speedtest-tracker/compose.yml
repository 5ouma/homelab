name: speedtest-tracker

services:
  speedtest-tracker:
    container_name: speedtest-tracker
    image: linuxserver/speedtest-tracker:0.21.2@sha256:bba0b9f649f1482d8b0b39febffad8c26f81bf7df89bf6dc4e8c1637fe325586
    environment:
      APP_KEY: $APP_KEY
      DB_CONNECTION: pgsql
      DB_HOST: $DB_HOSTNAME
      DB_DATABASE: $DB_DATABASE_NAME
      DB_USERNAME: $DB_USERNAME
      DB_PASSWORD: $DB_PASSWORD
      SPEEDTEST_SCHEDULE: 0 * * * *
      SPEEDTEST_SERVERS: $SPEEDTEST_SERVERS
      DISPLAY_TIMEZONE: JST
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: curl -f http://speedtest-tracker/api/healthcheck | jq -r .message || exit 1
    restart: always

  database:
    container_name: speedtest-tracker_database
    image: postgres:16.3@sha256:d0f363f8366fbc3f52d172c6e76bc27151c3d643b870e1062b4e8bfe65baf609
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - backup:/tmp/backup
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
    labels:
      docker-volume-backup.archive-pre: pg_dumpall -l '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/speedtest-tracker.sql -c --if-exists
    restart: always

  backup:
    container_name: speedtest-tracker_backup
    image: offen/docker-volume-backup:v2.40.0@sha256:f9cf83d63a1a9129b7c421090b584f11732fc201283f415552b14113f2cbf674
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: speedtest-tracker_database_%Y%m%d.{{ .Extension }}
      BACKUP_SKIP_BACKENDS_FROM_PRUNE: s3
      AWS_S3_BUCKET_NAME: $R2_BUCKET_NAME
      AWS_S3_PATH: $R2_PATH
      BACKUP_RETENTION_DAYS: 7
    env_file:
      - path: ../.env
        required: true
    volumes:
      - backup:/backup:ro
      - $BACKUP_DIR/database:/archive
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: speedtest-tracker_cloudflare-tunnel
    image: cloudflare/cloudflared:2024.8.2@sha256:004f4b7b60bab652d478148c138843c24eae1feee4c58fddd435b9b79c953957
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:
  backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
