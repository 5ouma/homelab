name: misskey

services:
  web:
    container_name: misskey_web
    image: docker.io/misskey/misskey:2025.7.0@sha256:03ec2f7751cb7912adecf166542119867838ff78f4d0a0c08e654ffdb99f5c13
    environment:
      MISSKEY_URL: $MISSKEY_URL
      DATABASE_DB: $DB_DATABASE_NAME
      DATABASE_USER: $DB_USERNAME
      DATABASE_PASSWORD: $DB_PASSWORD
    configs:
      - source: misskey_config
        target: /misskey/.config/default.yml
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  database:
    container_name: &misskey_database misskey_database
    image: docker.io/postgres:16.9@sha256:ddfe3e8713e3ee5b8f286082cb12512488dfbf3f5a1ecb0b74a42e6055af0a5f
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - database-backup:/tmp/backup
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
    labels:
      docker-volume-backup.exec-label: *misskey_database
      docker-volume-backup.archive-pre: pg_dump -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/misskey.sql
    restart: always

  redis:
    container_name: misskey_redis
    image: docker.io/redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup:
    container_name: misskey_backup
    image: docker.io/offen/docker-volume-backup:v2.44.0@sha256:fcf92e0f192214ccda0a89f989bed6c49d4ed77da4e59b38ddfcf05a05512337
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: misskey_database_%Y%m%d.{{ .Extension }}
      AWS_S3_PATH: $R2_PATH/database
      BACKUP_SOURCES: &backup_database_source /backup/database
      BACKUP_ARCHIVE: &backup_database_archive /archive/database
      BACKUP_RETENTION_DAYS: 14
      GPG_PASSPHRASE: $DB_PASSWORD
      EXEC_LABEL: *misskey_database
    env_file:
      - path: ../.env
        required: true
    volumes:
      - type: volume
        source: database-backup
        target: *backup_database_source
        read_only: true
      - type: bind
        source: $BACKUP_DIR/database
        target: *backup_database_archive
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: misskey_cloudflare-tunnel
    image: docker.io/cloudflare/cloudflared:2025.8.0@sha256:eb5c9324efe3b8e8a48612423dd912f76fa93cf138923e7eda5d1a9805057757
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:
  database-backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  misskey_config:
    file: ./config/misskey.yml
