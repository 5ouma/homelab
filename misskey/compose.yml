name: misskey

services:
  web:
    container_name: misskey_web
    image: misskey/misskey:2024.9.0@sha256:a99ce9cc37867db5b68f38cf0c9d715d47e4c659105be071d5d2209219eef52b
    environment:
      MISSKEY_URL: $MISSKEY_URL
      DATABASE_DB: $DB_DATABASE_NAME
      DATABASE_USER: $DB_USERNAME
      DATABASE_PASSWORD: $DB_PASSWORD
    configs:
      - source: misskey_config
        target: /misskey/.config/default.yml
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  database:
    container_name: misskey_database
    image: postgres:16.4@sha256:17b6fe3a18780358f7f44a02bc21a8ef5f349aa83d8dae96d43cd168a97cf6fa
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
      - backup:/tmp/backup
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
    labels:
      docker-volume-backup.archive-pre: pg_dumpall -l '$DB_DATABASE_NAME' -U '$DB_USERNAME' -f /tmp/backup/misskey.sql -c --if-exists --inserts
    restart: always

  redis:
    container_name: misskey_redis
    image: redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup:
    container_name: misskey_backup
    image: offen/docker-volume-backup:v2.43.0@sha256:596f3eb4d8dff797f0655d3f99486ffdee39f8e38ecce1c615005dbff07ba1c2
    environment:
      BACKUP_CRON_EXPRESSION: 0 5 * * *
      BACKUP_FILENAME: misskey_%Y%m%d.{{ .Extension }}
      BACKUP_SKIP_BACKENDS_FROM_PRUNE: s3
      AWS_S3_BUCKET_NAME: $R2_BUCKET_NAME
      AWS_S3_PATH: $R2_PATH
      BACKUP_RETENTION_DAYS: 7
    env_file:
      - path: ../.env
        required: true
    volumes:
      - backup:/backup:ro
      - $BACKUP_DIR/database:/archive
    configs:
      - source: docker-socket
        target: /var/run/docker.sock
      - source: timezone
        target: /etc/localtime
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: misskey_cloudflare-tunnel
    image: cloudflare/cloudflared:2024.9.1@sha256:0b88e00d8f93f9d18197f11506f0f6bf0d9266b5a0361c068930a3fe45b68b72
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:
  backup:

configs:
  docker-socket:
    file: /var/run/docker.sock
  timezone:
    file: /etc/localtime
  misskey_config:
    file: ./config/misskey.yml
