name: misskey

services:
  web:
    container_name: misskey_web
    image: misskey/misskey:2024.7.0@sha256:aac354dd13680c62902f318f4049a824968ba665e83aaad477ddae1ec3bae912
    environment:
      MISSKEY_URL: $MISSKEY_URL
      DATABASE_DB: $DB_DATABASE_NAME
      DATABASE_USER: $DB_USERNAME
      DATABASE_PASSWORD: $DB_PASSWORD
    configs:
      - source: misskey_config
        target: /misskey/.config/default.yml
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  database:
    container_name: misskey_database
    image: postgres:16.3@sha256:d0f363f8366fbc3f52d172c6e76bc27151c3d643b870e1062b4e8bfe65baf609
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d '$DB_DATABASE_NAME' -U '$DB_USERNAME' || exit 1
    restart: always

  redis:
    container_name: misskey_redis
    image: redis:7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  backup:
    container_name: misskey_backup
    image: prodrigestivill/postgres-backup-local:16@sha256:f873bbfb406db633ab879628b11ef8092279639c467a2ea5f5bfa08b776252fb
    environment:
      POSTGRES_HOST: $DB_HOSTNAME
      POSTGRES_DB: $DB_DATABASE_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_CLUSTER: TRUE
      POSTGRES_EXTRA_OPTS: --clean --if-exists
      TZ: JST
      SCHEDULE: 0 5 * * *
    volumes:
      - ./backups:/backups
    depends_on:
      database:
        condition: service_healthy
    restart: always

  cloudflare-tunnel:
    container_name: misskey_cloudflare-tunnel
    image: cloudflare/cloudflared:2024.8.2@sha256:004f4b7b60bab652d478148c138843c24eae1feee4c58fddd435b9b79c953957
    command: tunnel --no-autoupdate run
    environment:
      TUNNEL_TOKEN: $TUNNEL_TOKEN
    restart: always

volumes:
  database:

configs:
  misskey_config:
    file: ./config/misskey.yml
